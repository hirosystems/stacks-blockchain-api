/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MempoolFeePriorities,
    MempoolFeePrioritiesFromJSON,
    MempoolFeePrioritiesToJSON,
} from '../models';

/**
 * MempoolApi - interface
 * 
 * @export
 * @interface MempoolApiInterface
 */
export interface MempoolApiInterface {
    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type. 
     * @summary Get mempool transaction fee priorities
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MempoolApiInterface
     */
    getMempoolFeePrioritiesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolFeePriorities>>;

    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type. 
     * Get mempool transaction fee priorities
     */
    getMempoolFeePriorities(initOverrides?: RequestInit): Promise<MempoolFeePriorities>;

}

/**
 * 
 */
export class MempoolApi extends runtime.BaseAPI implements MempoolApiInterface {

    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type. 
     * Get mempool transaction fee priorities
     */
    async getMempoolFeePrioritiesRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<MempoolFeePriorities>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/extended/v2/mempool/fees`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MempoolFeePrioritiesFromJSON(jsonValue));
    }

    /**
     * Returns estimated fee priorities (in micro-STX) for all transactions that are currently in the mempool. Also returns priorities separated by transaction type. 
     * Get mempool transaction fee priorities
     */
    async getMempoolFeePriorities(initOverrides?: RequestInit): Promise<MempoolFeePriorities> {
        const response = await this.getMempoolFeePrioritiesRaw(initOverrides);
        return await response.value();
    }

}

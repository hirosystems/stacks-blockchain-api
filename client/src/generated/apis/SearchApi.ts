/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface SearchByIdRequest {
    id: string;
    includeMetadata?: boolean;
}

/**
 * SearchApi - interface
 * 
 * @export
 * @interface SearchApiInterface
 */
export interface SearchApiInterface {
    /**
     * Search blocks, transactions, contracts, or accounts by hash/ID
     * @summary Search
     * @param {string} id The hex hash string for a block or transaction, account address, or contract address
     * @param {boolean} [includeMetadata] This includes the detailed data for purticular hash in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SearchApiInterface
     */
    searchByIdRaw(requestParameters: SearchByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>>;

    /**
     * Search blocks, transactions, contracts, or accounts by hash/ID
     * Search
     */
    searchById(requestParameters: SearchByIdRequest, initOverrides?: RequestInit): Promise<object>;

}

/**
 * 
 */
export class SearchApi extends runtime.BaseAPI implements SearchApiInterface {

    /**
     * Search blocks, transactions, contracts, or accounts by hash/ID
     * Search
     */
    async searchByIdRaw(requestParameters: SearchByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling searchById.');
        }

        const queryParameters: any = {};

        if (requestParameters.includeMetadata !== undefined) {
            queryParameters['include_metadata'] = requestParameters.includeMetadata;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/extended/v1/search/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Search blocks, transactions, contracts, or accounts by hash/ID
     * Search
     */
    async searchById(requestParameters: SearchByIdRequest, initOverrides?: RequestInit): Promise<object> {
        const response = await this.searchByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

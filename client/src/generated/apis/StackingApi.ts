/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    PoolDelegationsResponse,
    PoolDelegationsResponseFromJSON,
    PoolDelegationsResponseToJSON,
} from '../models';

export interface GetPoolDelegationsRequest {
    poolPrincipal: string;
    afterBlock?: number;
    unanchored?: boolean;
    limit?: number;
    offset?: number;
}

/**
 * StackingApi - interface
 * 
 * @export
 * @interface StackingApiInterface
 */
export interface StackingApiInterface {
    /**
     * Retrieves the list of stacking pool members for a given delegator principal.
     * @summary Stacking pool members
     * @param {string} poolPrincipal Address principal of the stacking pool delegator
     * @param {number} [afterBlock] If specified, only delegation events after the given block will be included
     * @param {boolean} [unanchored] whether or not to include Stackers from unconfirmed transactions
     * @param {number} [limit] number of items to return
     * @param {number} [offset] number of items to skip
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StackingApiInterface
     */
    getPoolDelegationsRaw(requestParameters: GetPoolDelegationsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<PoolDelegationsResponse>>;

    /**
     * Retrieves the list of stacking pool members for a given delegator principal.
     * Stacking pool members
     */
    getPoolDelegations(requestParameters: GetPoolDelegationsRequest, initOverrides?: RequestInit): Promise<PoolDelegationsResponse>;

}

/**
 * 
 */
export class StackingApi extends runtime.BaseAPI implements StackingApiInterface {

    /**
     * Retrieves the list of stacking pool members for a given delegator principal.
     * Stacking pool members
     */
    async getPoolDelegationsRaw(requestParameters: GetPoolDelegationsRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<PoolDelegationsResponse>> {
        if (requestParameters.poolPrincipal === null || requestParameters.poolPrincipal === undefined) {
            throw new runtime.RequiredError('poolPrincipal','Required parameter requestParameters.poolPrincipal was null or undefined when calling getPoolDelegations.');
        }

        const queryParameters: any = {};

        if (requestParameters.afterBlock !== undefined) {
            queryParameters['after_block'] = requestParameters.afterBlock;
        }

        if (requestParameters.unanchored !== undefined) {
            queryParameters['unanchored'] = requestParameters.unanchored;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.offset !== undefined) {
            queryParameters['offset'] = requestParameters.offset;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/extended/beta/stacking/{pool_principal}/delegations`.replace(`{${"pool_principal"}}`, encodeURIComponent(String(requestParameters.poolPrincipal))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PoolDelegationsResponseFromJSON(jsonValue));
    }

    /**
     * Retrieves the list of stacking pool members for a given delegator principal.
     * Stacking pool members
     */
    async getPoolDelegations(requestParameters: GetPoolDelegationsRequest, initOverrides?: RequestInit): Promise<PoolDelegationsResponse> {
        const response = await this.getPoolDelegationsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

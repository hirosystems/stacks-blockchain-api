/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InboundStxTransfer,
    InboundStxTransferFromJSON,
    InboundStxTransferFromJSONTyped,
    InboundStxTransferToJSON,
} from './';

/**
 * GET request that returns a list of inbound STX transfers with a memo
 * @export
 * @interface AddressStxInboundListResponse
 */
export interface AddressStxInboundListResponse {
    /**
     * 
     * @type {number}
     * @memberof AddressStxInboundListResponse
     */
    limit: number;
    /**
     * 
     * @type {number}
     * @memberof AddressStxInboundListResponse
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof AddressStxInboundListResponse
     */
    total: number;
    /**
     * 
     * @type {Array<InboundStxTransfer>}
     * @memberof AddressStxInboundListResponse
     */
    results: Array<InboundStxTransfer>;
}

export function AddressStxInboundListResponseFromJSON(json: any): AddressStxInboundListResponse {
    return AddressStxInboundListResponseFromJSONTyped(json, false);
}

export function AddressStxInboundListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressStxInboundListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'limit': json['limit'],
        'offset': json['offset'],
        'total': json['total'],
        'results': ((json['results'] as Array<any>).map(InboundStxTransferFromJSON)),
    };
}

export function AddressStxInboundListResponseToJSON(value?: AddressStxInboundListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'limit': value.limit,
        'offset': value.offset,
        'total': value.total,
        'results': ((value.results as Array<any>).map(InboundStxTransferToJSON)),
    };
}


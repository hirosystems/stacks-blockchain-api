/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressTransactionWithTransfers,
    AddressTransactionWithTransfersFromJSON,
    AddressTransactionWithTransfersFromJSONTyped,
    AddressTransactionWithTransfersToJSON,
} from './';

/**
 * GET request that returns account transactions
 * @export
 * @interface AddressTransactionsWithTransfersListResponse
 */
export interface AddressTransactionsWithTransfersListResponse {
    /**
     * 
     * @type {number}
     * @memberof AddressTransactionsWithTransfersListResponse
     */
    limit: number;
    /**
     * 
     * @type {number}
     * @memberof AddressTransactionsWithTransfersListResponse
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof AddressTransactionsWithTransfersListResponse
     */
    total: number;
    /**
     * 
     * @type {Array<AddressTransactionWithTransfers>}
     * @memberof AddressTransactionsWithTransfersListResponse
     */
    results: Array<AddressTransactionWithTransfers>;
}

export function AddressTransactionsWithTransfersListResponseFromJSON(json: any): AddressTransactionsWithTransfersListResponse {
    return AddressTransactionsWithTransfersListResponseFromJSONTyped(json, false);
}

export function AddressTransactionsWithTransfersListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressTransactionsWithTransfersListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'limit': json['limit'],
        'offset': json['offset'],
        'total': json['total'],
        'results': ((json['results'] as Array<any>).map(AddressTransactionWithTransfersFromJSON)),
    };
}

export function AddressTransactionsWithTransfersListResponseToJSON(value?: AddressTransactionsWithTransfersListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'limit': value.limit,
        'offset': value.offset,
        'total': value.total,
        'results': ((value.results as Array<any>).map(AddressTransactionWithTransfersToJSON)),
    };
}


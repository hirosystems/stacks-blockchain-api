/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Current chain tip information
 * @export
 * @interface ChainTip
 */
export interface ChainTip {
    /**
     * the current block height
     * @type {number}
     * @memberof ChainTip
     */
    block_height: number;
    /**
     * the current block hash
     * @type {string}
     * @memberof ChainTip
     */
    block_hash: string;
    /**
     * the current index block hash
     * @type {string}
     * @memberof ChainTip
     */
    index_block_hash: string;
    /**
     * the current microblock hash
     * @type {string}
     * @memberof ChainTip
     */
    microblock_hash?: string;
    /**
     * the current microblock sequence number
     * @type {number}
     * @memberof ChainTip
     */
    microblock_sequence?: number;
    /**
     * the current burn chain block height
     * @type {number}
     * @memberof ChainTip
     */
    burn_block_height: number;
}

export function ChainTipFromJSON(json: any): ChainTip {
    return ChainTipFromJSONTyped(json, false);
}

export function ChainTipFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainTip {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'block_height': json['block_height'],
        'block_hash': json['block_hash'],
        'index_block_hash': json['index_block_hash'],
        'microblock_hash': !exists(json, 'microblock_hash') ? undefined : json['microblock_hash'],
        'microblock_sequence': !exists(json, 'microblock_sequence') ? undefined : json['microblock_sequence'],
        'burn_block_height': json['burn_block_height'],
    };
}

export function ChainTipToJSON(value?: ChainTip | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'block_height': value.block_height,
        'block_hash': value.block_hash,
        'index_block_hash': value.index_block_hash,
        'microblock_hash': value.microblock_hash,
        'microblock_sequence': value.microblock_sequence,
        'burn_block_height': value.burn_block_height,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * GET request to get contract interface
 * @export
 * @interface ContractInterfaceResponse
 */
export interface ContractInterfaceResponse {
    /**
     * List of defined methods
     * @type {Array<object>}
     * @memberof ContractInterfaceResponse
     */
    functions: Array<object>;
    /**
     * List of defined variables
     * @type {Array<object>}
     * @memberof ContractInterfaceResponse
     */
    variables: Array<object>;
    /**
     * List of defined data-maps
     * @type {Array<object>}
     * @memberof ContractInterfaceResponse
     */
    maps: Array<object>;
    /**
     * List of fungible tokens in the contract
     * @type {Array<object>}
     * @memberof ContractInterfaceResponse
     */
    fungible_tokens: Array<object>;
    /**
     * List of non-fungible tokens in the contract
     * @type {Array<object>}
     * @memberof ContractInterfaceResponse
     */
    non_fungible_tokens: Array<object>;
}

export function ContractInterfaceResponseFromJSON(json: any): ContractInterfaceResponse {
    return ContractInterfaceResponseFromJSONTyped(json, false);
}

export function ContractInterfaceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractInterfaceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'functions': json['functions'],
        'variables': json['variables'],
        'maps': json['maps'],
        'fungible_tokens': json['fungible_tokens'],
        'non_fungible_tokens': json['non_fungible_tokens'],
    };
}

export function ContractInterfaceResponseToJSON(value?: ContractInterfaceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'functions': value.functions,
        'variables': value.variables,
        'maps': value.maps,
        'fungible_tokens': value.fungible_tokens,
        'non_fungible_tokens': value.non_fungible_tokens,
    };
}


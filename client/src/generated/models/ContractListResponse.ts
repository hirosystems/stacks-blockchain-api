/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SmartContract,
    SmartContractFromJSON,
    SmartContractFromJSONTyped,
    SmartContractToJSON,
} from './';

/**
 * GET list of contracts
 * @export
 * @interface ContractListResponse
 */
export interface ContractListResponse {
    /**
     * The number of contracts to return
     * @type {number}
     * @memberof ContractListResponse
     */
    limit: number;
    /**
     * The number to contracts to skip (starting at `0`)
     * @type {number}
     * @memberof ContractListResponse
     */
    offset: number;
    /**
     * 
     * @type {Array<SmartContract>}
     * @memberof ContractListResponse
     */
    results: Array<SmartContract>;
}

export function ContractListResponseFromJSON(json: any): ContractListResponse {
    return ContractListResponseFromJSONTyped(json, false);
}

export function ContractListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'limit': json['limit'],
        'offset': json['offset'],
        'results': ((json['results'] as Array<any>).map(SmartContractFromJSON)),
    };
}

export function ContractListResponseToJSON(value?: ContractListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'limit': value.limit,
        'offset': value.offset,
        'results': ((value.results as Array<any>).map(SmartContractToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MempoolFeePrioritiesAll,
    MempoolFeePrioritiesAllFromJSON,
    MempoolFeePrioritiesAllFromJSONTyped,
    MempoolFeePrioritiesAllToJSON,
} from './';

/**
 * GET request that returns fee priorities from mempool transactions
 * @export
 * @interface MempoolFeePriorities
 */
export interface MempoolFeePriorities {
    /**
     * 
     * @type {MempoolFeePrioritiesAll}
     * @memberof MempoolFeePriorities
     */
    all: MempoolFeePrioritiesAll;
    /**
     * 
     * @type {MempoolFeePrioritiesAll}
     * @memberof MempoolFeePriorities
     */
    token_transfer?: MempoolFeePrioritiesAll;
    /**
     * 
     * @type {MempoolFeePrioritiesAll}
     * @memberof MempoolFeePriorities
     */
    smart_contract?: MempoolFeePrioritiesAll;
    /**
     * 
     * @type {MempoolFeePrioritiesAll}
     * @memberof MempoolFeePriorities
     */
    contract_call?: MempoolFeePrioritiesAll;
}

export function MempoolFeePrioritiesFromJSON(json: any): MempoolFeePriorities {
    return MempoolFeePrioritiesFromJSONTyped(json, false);
}

export function MempoolFeePrioritiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): MempoolFeePriorities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'all': MempoolFeePrioritiesAllFromJSON(json['all']),
        'token_transfer': !exists(json, 'token_transfer') ? undefined : MempoolFeePrioritiesAllFromJSON(json['token_transfer']),
        'smart_contract': !exists(json, 'smart_contract') ? undefined : MempoolFeePrioritiesAllFromJSON(json['smart_contract']),
        'contract_call': !exists(json, 'contract_call') ? undefined : MempoolFeePrioritiesAllFromJSON(json['contract_call']),
    };
}

export function MempoolFeePrioritiesToJSON(value?: MempoolFeePriorities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'all': MempoolFeePrioritiesAllToJSON(value.all),
        'token_transfer': MempoolFeePrioritiesAllToJSON(value.token_transfer),
        'smart_contract': MempoolFeePrioritiesAllToJSON(value.smart_contract),
        'contract_call': MempoolFeePrioritiesAllToJSON(value.contract_call),
    };
}


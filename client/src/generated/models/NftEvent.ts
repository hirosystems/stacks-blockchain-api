/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressNftListResponseValue,
    AddressNftListResponseValueFromJSON,
    AddressNftListResponseValueFromJSONTyped,
    AddressNftListResponseValueToJSON,
} from './';

/**
 * 
 * @export
 * @interface NftEvent
 */
export interface NftEvent {
    /**
     * 
     * @type {string}
     * @memberof NftEvent
     */
    sender?: string;
    /**
     * 
     * @type {string}
     * @memberof NftEvent
     */
    recipient?: string;
    /**
     * 
     * @type {string}
     * @memberof NftEvent
     */
    asset_identifier: string;
    /**
     * 
     * @type {string}
     * @memberof NftEvent
     */
    asset_event_type: string;
    /**
     * 
     * @type {AddressNftListResponseValue}
     * @memberof NftEvent
     */
    value: AddressNftListResponseValue;
    /**
     * 
     * @type {string}
     * @memberof NftEvent
     */
    tx_id: string;
    /**
     * 
     * @type {number}
     * @memberof NftEvent
     */
    tx_index: number;
    /**
     * 
     * @type {number}
     * @memberof NftEvent
     */
    block_height: number;
    /**
     * 
     * @type {number}
     * @memberof NftEvent
     */
    event_index: number;
}

export function NftEventFromJSON(json: any): NftEvent {
    return NftEventFromJSONTyped(json, false);
}

export function NftEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): NftEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sender': !exists(json, 'sender') ? undefined : json['sender'],
        'recipient': !exists(json, 'recipient') ? undefined : json['recipient'],
        'asset_identifier': json['asset_identifier'],
        'asset_event_type': json['asset_event_type'],
        'value': AddressNftListResponseValueFromJSON(json['value']),
        'tx_id': json['tx_id'],
        'tx_index': json['tx_index'],
        'block_height': json['block_height'],
        'event_index': json['event_index'],
    };
}

export function NftEventToJSON(value?: NftEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sender': value.sender,
        'recipient': value.recipient,
        'asset_identifier': value.asset_identifier,
        'asset_event_type': value.asset_event_type,
        'value': AddressNftListResponseValueToJSON(value.value),
        'tx_id': value.tx_id,
        'tx_index': value.tx_index,
        'block_height': value.block_height,
        'event_index': value.event_index,
    };
}


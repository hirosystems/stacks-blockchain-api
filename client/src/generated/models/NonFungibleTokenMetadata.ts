/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NonFungibleTokenMetadata
 */
export interface NonFungibleTokenMetadata {
    /**
     * An optional string that is a valid URI which resolves to this token's metadata. Can be empty.
     * @type {string}
     * @memberof NonFungibleTokenMetadata
     */
    token_uri: string;
    /**
     * Identifies the asset to which this token represents
     * @type {string}
     * @memberof NonFungibleTokenMetadata
     */
    name: string;
    /**
     * Describes the asset to which this token represents
     * @type {string}
     * @memberof NonFungibleTokenMetadata
     */
    description: string;
    /**
     * A URI pointing to a resource with mime type image/* representing the asset to which this token represents. The API may provide a URI to a cached resource, dependending on configuration. Otherwise, this can be the same value as the canonical image URI.
     * @type {string}
     * @memberof NonFungibleTokenMetadata
     */
    image_uri: string;
    /**
     * The original image URI specified by the contract. A URI pointing to a resource with mime type image/* representing the asset to which this token represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.
     * @type {string}
     * @memberof NonFungibleTokenMetadata
     */
    image_canonical_uri: string;
    /**
     * Tx id that deployed the contract
     * @type {string}
     * @memberof NonFungibleTokenMetadata
     */
    tx_id: string;
    /**
     * principle that deployed the contract
     * @type {string}
     * @memberof NonFungibleTokenMetadata
     */
    sender_address: string;
}

export function NonFungibleTokenMetadataFromJSON(json: any): NonFungibleTokenMetadata {
    return NonFungibleTokenMetadataFromJSONTyped(json, false);
}

export function NonFungibleTokenMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonFungibleTokenMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'token_uri': json['token_uri'],
        'name': json['name'],
        'description': json['description'],
        'image_uri': json['image_uri'],
        'image_canonical_uri': json['image_canonical_uri'],
        'tx_id': json['tx_id'],
        'sender_address': json['sender_address'],
    };
}

export function NonFungibleTokenMetadataToJSON(value?: NonFungibleTokenMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'token_uri': value.token_uri,
        'name': value.name,
        'description': value.description,
        'image_uri': value.image_uri,
        'image_canonical_uri': value.image_canonical_uri,
        'tx_id': value.tx_id,
        'sender_address': value.sender_address,
    };
}


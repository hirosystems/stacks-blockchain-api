/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PoolDelegation,
    PoolDelegationFromJSON,
    PoolDelegationFromJSONTyped,
    PoolDelegationToJSON,
} from './';

/**
 * GET request that returns stacking pool member details for a given pool (delegator) principal
 * @export
 * @interface PoolDelegationsResponse
 */
export interface PoolDelegationsResponse {
    /**
     * The number of Stackers to return
     * @type {number}
     * @memberof PoolDelegationsResponse
     */
    limit: number;
    /**
     * The number to Stackers to skip (starting at `0`)
     * @type {number}
     * @memberof PoolDelegationsResponse
     */
    offset: number;
    /**
     * The total number of Stackers
     * @type {number}
     * @memberof PoolDelegationsResponse
     */
    total: number;
    /**
     * 
     * @type {Array<PoolDelegation>}
     * @memberof PoolDelegationsResponse
     */
    results: Array<PoolDelegation>;
}

export function PoolDelegationsResponseFromJSON(json: any): PoolDelegationsResponse {
    return PoolDelegationsResponseFromJSONTyped(json, false);
}

export function PoolDelegationsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PoolDelegationsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'limit': json['limit'],
        'offset': json['offset'],
        'total': json['total'],
        'results': ((json['results'] as Array<any>).map(PoolDelegationFromJSON)),
    };
}

export function PoolDelegationsResponseToJSON(value?: PoolDelegationsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'limit': value.limit,
        'offset': value.offset,
        'total': value.total,
        'results': ((value.results as Array<any>).map(PoolDelegationToJSON)),
    };
}


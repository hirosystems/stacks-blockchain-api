/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RosettaBlockMetadata1,
    RosettaBlockMetadata1FromJSON,
    RosettaBlockMetadata1FromJSONTyped,
    RosettaBlockMetadata1ToJSON,
    RosettaParentBlockIdentifier,
    RosettaParentBlockIdentifierFromJSON,
    RosettaParentBlockIdentifierFromJSONTyped,
    RosettaParentBlockIdentifierToJSON,
    RosettaTransaction,
    RosettaTransactionFromJSON,
    RosettaTransactionFromJSONTyped,
    RosettaTransactionToJSON,
} from './';

/**
 * Blocks contain an array of Transactions that occurred at a particular BlockIdentifier. A hard requirement for blocks returned by Rosetta implementations is that they MUST be inalterable: once a client has requested and received a block identified by a specific BlockIndentifier, all future calls for that same BlockIdentifier must return the same block contents.
 * @export
 * @interface RosettaBlock
 */
export interface RosettaBlock {
    /**
     * The block_identifier uniquely identifies a block in a particular network.
     * @type {object}
     * @memberof RosettaBlock
     */
    block_identifier: object | null;
    /**
     * 
     * @type {RosettaParentBlockIdentifier}
     * @memberof RosettaBlock
     */
    parent_block_identifier: RosettaParentBlockIdentifier;
    /**
     * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
     * @type {number}
     * @memberof RosettaBlock
     */
    timestamp: number;
    /**
     * All the transactions in the block
     * @type {Array<RosettaTransaction>}
     * @memberof RosettaBlock
     */
    transactions: Array<RosettaTransaction>;
    /**
     * 
     * @type {RosettaBlockMetadata1}
     * @memberof RosettaBlock
     */
    metadata?: RosettaBlockMetadata1;
}

export function RosettaBlockFromJSON(json: any): RosettaBlock {
    return RosettaBlockFromJSONTyped(json, false);
}

export function RosettaBlockFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlock {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'block_identifier': json['block_identifier'],
        'parent_block_identifier': RosettaParentBlockIdentifierFromJSON(json['parent_block_identifier']),
        'timestamp': json['timestamp'],
        'transactions': ((json['transactions'] as Array<any>).map(RosettaTransactionFromJSON)),
        'metadata': !exists(json, 'metadata') ? undefined : RosettaBlockMetadata1FromJSON(json['metadata']),
    };
}

export function RosettaBlockToJSON(value?: RosettaBlock | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'block_identifier': value.block_identifier,
        'parent_block_identifier': RosettaParentBlockIdentifierToJSON(value.parent_block_identifier),
        'timestamp': value.timestamp,
        'transactions': ((value.transactions as Array<any>).map(RosettaTransactionToJSON)),
        'metadata': RosettaBlockMetadata1ToJSON(value.metadata),
    };
}


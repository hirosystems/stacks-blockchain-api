/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Transactions that are related to other transactions (like a cross-shard transaction) should include the tranaction_identifier of these transactions in the metadata.
 * @export
 * @interface RosettaBlockMetadata
 */
export interface RosettaBlockMetadata {
    /**
     * STX token transfer memo.
     * @type {string}
     * @memberof RosettaBlockMetadata
     */
    memo?: string;
    /**
     * The Size
     * @type {number}
     * @memberof RosettaBlockMetadata
     */
    size?: number;
    /**
     * The locktime
     * @type {number}
     * @memberof RosettaBlockMetadata
     */
    lockTime?: number;
}

export function RosettaBlockMetadataFromJSON(json: any): RosettaBlockMetadata {
    return RosettaBlockMetadataFromJSONTyped(json, false);
}

export function RosettaBlockMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlockMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'memo': !exists(json, 'memo') ? undefined : json['memo'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'lockTime': !exists(json, 'lockTime') ? undefined : json['lockTime'],
    };
}

export function RosettaBlockMetadataToJSON(value?: RosettaBlockMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'memo': value.memo,
        'size': value.size,
        'lockTime': value.lockTime,
    };
}


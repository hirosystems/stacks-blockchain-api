/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NetworkIdentifier,
    NetworkIdentifierFromJSON,
    NetworkIdentifierFromJSONTyped,
    NetworkIdentifierToJSON,
    TransactionIdentifier,
    TransactionIdentifierFromJSON,
    TransactionIdentifierFromJSONTyped,
    TransactionIdentifierToJSON,
} from './';

/**
 * A BlockTransactionRequest is used to fetch a Transaction included in a block that is not returned in a BlockResponse.
 * @export
 * @interface RosettaBlockTransactionRequest
 */
export interface RosettaBlockTransactionRequest {
    /**
     * 
     * @type {NetworkIdentifier}
     * @memberof RosettaBlockTransactionRequest
     */
    network_identifier: NetworkIdentifier;
    /**
     * When fetching data by BlockIdentifier, it may be possible to only specify the index or hash. If neither property is specified, it is assumed that the client is making a request at the current block.
     * @type {object}
     * @memberof RosettaBlockTransactionRequest
     */
    block_identifier: object;
    /**
     * 
     * @type {TransactionIdentifier}
     * @memberof RosettaBlockTransactionRequest
     */
    transaction_identifier: TransactionIdentifier;
}

export function RosettaBlockTransactionRequestFromJSON(json: any): RosettaBlockTransactionRequest {
    return RosettaBlockTransactionRequestFromJSONTyped(json, false);
}

export function RosettaBlockTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaBlockTransactionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'network_identifier': NetworkIdentifierFromJSON(json['network_identifier']),
        'block_identifier': json['block_identifier'],
        'transaction_identifier': TransactionIdentifierFromJSON(json['transaction_identifier']),
    };
}

export function RosettaBlockTransactionRequestToJSON(value?: RosettaBlockTransactionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'network_identifier': NetworkIdentifierToJSON(value.network_identifier),
        'block_identifier': value.block_identifier,
        'transaction_identifier': TransactionIdentifierToJSON(value.transaction_identifier),
    };
}


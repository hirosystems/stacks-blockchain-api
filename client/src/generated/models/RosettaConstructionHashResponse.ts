/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TransactionIdentifier,
    TransactionIdentifierFromJSON,
    TransactionIdentifierFromJSONTyped,
    TransactionIdentifierToJSON,
} from './';

/**
 * TransactionIdentifier contains the transaction_identifier of a transaction that was submitted to either /construction/hash or /construction/submit.
 * @export
 * @interface RosettaConstructionHashResponse
 */
export interface RosettaConstructionHashResponse {
    /**
     * 
     * @type {TransactionIdentifier}
     * @memberof RosettaConstructionHashResponse
     */
    transaction_identifier: TransactionIdentifier;
    /**
     * 
     * @type {object}
     * @memberof RosettaConstructionHashResponse
     */
    metadata?: object;
}

export function RosettaConstructionHashResponseFromJSON(json: any): RosettaConstructionHashResponse {
    return RosettaConstructionHashResponseFromJSONTyped(json, false);
}

export function RosettaConstructionHashResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionHashResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transaction_identifier': TransactionIdentifierFromJSON(json['transaction_identifier']),
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function RosettaConstructionHashResponseToJSON(value?: RosettaConstructionHashResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transaction_identifier': TransactionIdentifierToJSON(value.transaction_identifier),
        'metadata': value.metadata,
    };
}


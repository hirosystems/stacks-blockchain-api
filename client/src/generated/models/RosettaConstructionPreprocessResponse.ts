/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RosettaAccount,
    RosettaAccountFromJSON,
    RosettaAccountFromJSONTyped,
    RosettaAccountToJSON,
    RosettaOptions,
    RosettaOptionsFromJSON,
    RosettaOptionsFromJSONTyped,
    RosettaOptionsToJSON,
} from './';

/**
 * RosettaConstructionPreprocessResponse contains options that will be sent unmodified to /construction/metadata. If it is not necessary to make a request to /construction/metadata, options should be omitted. Some blockchains require the PublicKey of particular AccountIdentifiers to construct a valid transaction. To fetch these PublicKeys, populate required_public_keys with the AccountIdentifiers associated with the desired PublicKeys. If it is not necessary to retrieve any PublicKeys for construction, required_public_keys should be omitted.
 * @export
 * @interface RosettaConstructionPreprocessResponse
 */
export interface RosettaConstructionPreprocessResponse {
    /**
     * 
     * @type {RosettaOptions}
     * @memberof RosettaConstructionPreprocessResponse
     */
    options?: RosettaOptions;
    /**
     * 
     * @type {Array<RosettaAccount>}
     * @memberof RosettaConstructionPreprocessResponse
     */
    required_public_keys?: Array<RosettaAccount>;
}

export function RosettaConstructionPreprocessResponseFromJSON(json: any): RosettaConstructionPreprocessResponse {
    return RosettaConstructionPreprocessResponseFromJSONTyped(json, false);
}

export function RosettaConstructionPreprocessResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaConstructionPreprocessResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'options': !exists(json, 'options') ? undefined : RosettaOptionsFromJSON(json['options']),
        'required_public_keys': !exists(json, 'required_public_keys') ? undefined : ((json['required_public_keys'] as Array<any>).map(RosettaAccountFromJSON)),
    };
}

export function RosettaConstructionPreprocessResponseToJSON(value?: RosettaConstructionPreprocessResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'options': RosettaOptionsToJSON(value.options),
        'required_public_keys': value.required_public_keys === undefined ? undefined : ((value.required_public_keys as Array<any>).map(RosettaAccountToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NetworkIdentifier,
    NetworkIdentifierFromJSON,
    NetworkIdentifierFromJSONTyped,
    NetworkIdentifierToJSON,
} from './';

/**
 * A NetworkListResponse contains all NetworkIdentifiers that the node can serve information for.
 * @export
 * @interface RosettaNetworkListResponse
 */
export interface RosettaNetworkListResponse {
    /**
     * The network_identifier specifies which network a particular object is associated with.
     * @type {Array<NetworkIdentifier>}
     * @memberof RosettaNetworkListResponse
     */
    network_identifiers: Array<NetworkIdentifier>;
}

export function RosettaNetworkListResponseFromJSON(json: any): RosettaNetworkListResponse {
    return RosettaNetworkListResponseFromJSONTyped(json, false);
}

export function RosettaNetworkListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'network_identifiers': ((json['network_identifiers'] as Array<any>).map(NetworkIdentifierFromJSON)),
    };
}

export function RosettaNetworkListResponseToJSON(value?: RosettaNetworkListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'network_identifiers': ((value.network_identifiers as Array<any>).map(NetworkIdentifierToJSON)),
    };
}


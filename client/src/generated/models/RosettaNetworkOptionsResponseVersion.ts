/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The Version object is utilized to inform the client of the versions of different components of the Rosetta implementation.
 * @export
 * @interface RosettaNetworkOptionsResponseVersion
 */
export interface RosettaNetworkOptionsResponseVersion {
    /**
     * The rosetta_version is the version of the Rosetta interface the implementation adheres to. This can be useful for clients looking to reliably parse responses.
     * @type {string}
     * @memberof RosettaNetworkOptionsResponseVersion
     */
    rosetta_version: string;
    /**
     * The node_version is the canonical version of the node runtime. This can help clients manage deployments.
     * @type {string}
     * @memberof RosettaNetworkOptionsResponseVersion
     */
    node_version: string;
    /**
     * When a middleware server is used to adhere to the Rosetta interface, it should return its version here. This can help clients manage deployments.
     * @type {string}
     * @memberof RosettaNetworkOptionsResponseVersion
     */
    middleware_version?: string;
    /**
     * Any other information that may be useful about versioning of dependent services should be returned here.
     * @type {object}
     * @memberof RosettaNetworkOptionsResponseVersion
     */
    metadata?: object;
}

export function RosettaNetworkOptionsResponseVersionFromJSON(json: any): RosettaNetworkOptionsResponseVersion {
    return RosettaNetworkOptionsResponseVersionFromJSONTyped(json, false);
}

export function RosettaNetworkOptionsResponseVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkOptionsResponseVersion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rosetta_version': json['rosetta_version'],
        'node_version': json['node_version'],
        'middleware_version': !exists(json, 'middleware_version') ? undefined : json['middleware_version'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function RosettaNetworkOptionsResponseVersionToJSON(value?: RosettaNetworkOptionsResponseVersion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rosetta_version': value.rosetta_version,
        'node_version': value.node_version,
        'middleware_version': value.middleware_version,
        'metadata': value.metadata,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RosettaGenesisBlockIdentifier,
    RosettaGenesisBlockIdentifierFromJSON,
    RosettaGenesisBlockIdentifierFromJSONTyped,
    RosettaGenesisBlockIdentifierToJSON,
    RosettaOldestBlockIdentifier,
    RosettaOldestBlockIdentifierFromJSON,
    RosettaOldestBlockIdentifierFromJSONTyped,
    RosettaOldestBlockIdentifierToJSON,
    RosettaPeers,
    RosettaPeersFromJSON,
    RosettaPeersFromJSONTyped,
    RosettaPeersToJSON,
    RosettaSyncStatus,
    RosettaSyncStatusFromJSON,
    RosettaSyncStatusFromJSONTyped,
    RosettaSyncStatusToJSON,
} from './';

/**
 * NetworkStatusResponse contains basic information about the node's view of a blockchain network. It is assumed that any BlockIdentifier.Index less than or equal to CurrentBlockIdentifier.Index can be queried. If a Rosetta implementation prunes historical state, it should populate the optional oldest_block_identifier field with the oldest block available to query. If this is not populated, it is assumed that the genesis_block_identifier is the oldest queryable block. If a Rosetta implementation performs some pre-sync before it is possible to query blocks, sync_status should be populated so that clients can still monitor healthiness. Without this field, it may appear that the implementation is stuck syncing and needs to be terminated.
 * @export
 * @interface RosettaNetworkStatusResponse
 */
export interface RosettaNetworkStatusResponse {
    /**
     * The block_identifier uniquely identifies a block in a particular network.
     * @type {object}
     * @memberof RosettaNetworkStatusResponse
     */
    current_block_identifier: object | null;
    /**
     * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
     * @type {number}
     * @memberof RosettaNetworkStatusResponse
     */
    current_block_timestamp: number;
    /**
     * 
     * @type {RosettaGenesisBlockIdentifier}
     * @memberof RosettaNetworkStatusResponse
     */
    genesis_block_identifier: RosettaGenesisBlockIdentifier;
    /**
     * 
     * @type {RosettaOldestBlockIdentifier}
     * @memberof RosettaNetworkStatusResponse
     */
    oldest_block_identifier?: RosettaOldestBlockIdentifier;
    /**
     * 
     * @type {RosettaSyncStatus}
     * @memberof RosettaNetworkStatusResponse
     */
    sync_status?: RosettaSyncStatus;
    /**
     * Peers information
     * @type {Array<RosettaPeers>}
     * @memberof RosettaNetworkStatusResponse
     */
    peers: Array<RosettaPeers>;
}

export function RosettaNetworkStatusResponseFromJSON(json: any): RosettaNetworkStatusResponse {
    return RosettaNetworkStatusResponseFromJSONTyped(json, false);
}

export function RosettaNetworkStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaNetworkStatusResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'current_block_identifier': json['current_block_identifier'],
        'current_block_timestamp': json['current_block_timestamp'],
        'genesis_block_identifier': RosettaGenesisBlockIdentifierFromJSON(json['genesis_block_identifier']),
        'oldest_block_identifier': !exists(json, 'oldest_block_identifier') ? undefined : RosettaOldestBlockIdentifierFromJSON(json['oldest_block_identifier']),
        'sync_status': !exists(json, 'sync_status') ? undefined : RosettaSyncStatusFromJSON(json['sync_status']),
        'peers': ((json['peers'] as Array<any>).map(RosettaPeersFromJSON)),
    };
}

export function RosettaNetworkStatusResponseToJSON(value?: RosettaNetworkStatusResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'current_block_identifier': value.current_block_identifier,
        'current_block_timestamp': value.current_block_timestamp,
        'genesis_block_identifier': RosettaGenesisBlockIdentifierToJSON(value.genesis_block_identifier),
        'oldest_block_identifier': RosettaOldestBlockIdentifierToJSON(value.oldest_block_identifier),
        'sync_status': RosettaSyncStatusToJSON(value.sync_status),
        'peers': ((value.peers as Array<any>).map(RosettaPeersToJSON)),
    };
}


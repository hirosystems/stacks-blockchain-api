/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * SyncStatus is used to provide additional context about an implementation's sync status. It is often used to indicate that an implementation is healthy when it cannot be queried until some sync phase occurs. If an implementation is immediately queryable, this model is often not populated.
 * @export
 * @interface RosettaSyncStatus
 */
export interface RosettaSyncStatus {
    /**
     * CurrentIndex is the index of the last synced block in the current stage.
     * @type {number}
     * @memberof RosettaSyncStatus
     */
    current_index: number;
    /**
     * TargetIndex is the index of the block that the implementation is attempting to sync to in the current stage.
     * @type {number}
     * @memberof RosettaSyncStatus
     */
    target_index?: number;
    /**
     * Stage is the phase of the sync process.
     * @type {string}
     * @memberof RosettaSyncStatus
     */
    stage?: string;
    /**
     * Synced indicates if an implementation has synced up to the most recent block.
     * @type {boolean}
     * @memberof RosettaSyncStatus
     */
    synced?: boolean;
}

export function RosettaSyncStatusFromJSON(json: any): RosettaSyncStatus {
    return RosettaSyncStatusFromJSONTyped(json, false);
}

export function RosettaSyncStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaSyncStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'current_index': json['current_index'],
        'target_index': !exists(json, 'target_index') ? undefined : json['target_index'],
        'stage': !exists(json, 'stage') ? undefined : json['stage'],
        'synced': !exists(json, 'synced') ? undefined : json['synced'],
    };
}

export function RosettaSyncStatusToJSON(value?: RosettaSyncStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'current_index': value.current_index,
        'target_index': value.target_index,
        'stage': value.stage,
        'synced': value.synced,
    };
}


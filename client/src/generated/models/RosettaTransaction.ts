/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RosettaBlockMetadata,
    RosettaBlockMetadataFromJSON,
    RosettaBlockMetadataFromJSONTyped,
    RosettaBlockMetadataToJSON,
    RosettaOperation,
    RosettaOperationFromJSON,
    RosettaOperationFromJSONTyped,
    RosettaOperationToJSON,
    TransactionIdentifier,
    TransactionIdentifierFromJSON,
    TransactionIdentifierFromJSONTyped,
    TransactionIdentifierToJSON,
} from './';

/**
 * Transactions contain an array of Operations that are attributable to the same TransactionIdentifier.
 * @export
 * @interface RosettaTransaction
 */
export interface RosettaTransaction {
    /**
     * 
     * @type {TransactionIdentifier}
     * @memberof RosettaTransaction
     */
    transaction_identifier: TransactionIdentifier;
    /**
     * List of operations
     * @type {Array<RosettaOperation>}
     * @memberof RosettaTransaction
     */
    operations: Array<RosettaOperation>;
    /**
     * 
     * @type {RosettaBlockMetadata}
     * @memberof RosettaTransaction
     */
    metadata?: RosettaBlockMetadata;
}

export function RosettaTransactionFromJSON(json: any): RosettaTransaction {
    return RosettaTransactionFromJSONTyped(json, false);
}

export function RosettaTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RosettaTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transaction_identifier': TransactionIdentifierFromJSON(json['transaction_identifier']),
        'operations': ((json['operations'] as Array<any>).map(RosettaOperationFromJSON)),
        'metadata': !exists(json, 'metadata') ? undefined : RosettaBlockMetadataFromJSON(json['metadata']),
    };
}

export function RosettaTransactionToJSON(value?: RosettaTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transaction_identifier': TransactionIdentifierToJSON(value.transaction_identifier),
        'operations': ((value.operations as Array<any>).map(RosettaOperationToJSON)),
        'metadata': RosettaBlockMetadataToJSON(value.metadata),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Stacks Blockchain API
 * Welcome to the API reference overview for the <a href=\"https://docs.hiro.so/get-started/stacks-blockchain-api\">Stacks Blockchain API</a>.  <a href=\"https://hirosystems.github.io/stacks-blockchain-api/collection.json\" download=\"stacks-api-collection.json\">Download Postman collection</a> 
 *
 * The version of the OpenAPI document: STACKS_API_VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TransactionFeeEstimateResponseEstimatedCost,
    TransactionFeeEstimateResponseEstimatedCostFromJSON,
    TransactionFeeEstimateResponseEstimatedCostFromJSONTyped,
    TransactionFeeEstimateResponseEstimatedCostToJSON,
    TransactionFeeEstimateResponseEstimations,
    TransactionFeeEstimateResponseEstimationsFromJSON,
    TransactionFeeEstimateResponseEstimationsFromJSONTyped,
    TransactionFeeEstimateResponseEstimationsToJSON,
} from './';

/**
 * POST response for estimated fee
 * @export
 * @interface TransactionFeeEstimateResponse
 */
export interface TransactionFeeEstimateResponse {
    /**
     * 
     * @type {number}
     * @memberof TransactionFeeEstimateResponse
     */
    estimated_cost_scalar: number;
    /**
     * 
     * @type {number}
     * @memberof TransactionFeeEstimateResponse
     */
    cost_scalar_change_by_byte?: number;
    /**
     * 
     * @type {TransactionFeeEstimateResponseEstimatedCost}
     * @memberof TransactionFeeEstimateResponse
     */
    estimated_cost: TransactionFeeEstimateResponseEstimatedCost;
    /**
     * 
     * @type {Array<TransactionFeeEstimateResponseEstimations>}
     * @memberof TransactionFeeEstimateResponse
     */
    estimations?: Array<TransactionFeeEstimateResponseEstimations>;
}

export function TransactionFeeEstimateResponseFromJSON(json: any): TransactionFeeEstimateResponse {
    return TransactionFeeEstimateResponseFromJSONTyped(json, false);
}

export function TransactionFeeEstimateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionFeeEstimateResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'estimated_cost_scalar': json['estimated_cost_scalar'],
        'cost_scalar_change_by_byte': !exists(json, 'cost_scalar_change_by_byte') ? undefined : json['cost_scalar_change_by_byte'],
        'estimated_cost': TransactionFeeEstimateResponseEstimatedCostFromJSON(json['estimated_cost']),
        'estimations': !exists(json, 'estimations') ? undefined : ((json['estimations'] as Array<any>).map(TransactionFeeEstimateResponseEstimationsFromJSON)),
    };
}

export function TransactionFeeEstimateResponseToJSON(value?: TransactionFeeEstimateResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'estimated_cost_scalar': value.estimated_cost_scalar,
        'cost_scalar_change_by_byte': value.cost_scalar_change_by_byte,
        'estimated_cost': TransactionFeeEstimateResponseEstimatedCostToJSON(value.estimated_cost),
        'estimations': value.estimations === undefined ? undefined : ((value.estimations as Array<any>).map(TransactionFeeEstimateResponseEstimationsToJSON)),
    };
}

